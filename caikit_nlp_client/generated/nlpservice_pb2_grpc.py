# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from caikit_nlp_client.generated.caikit.runtime.Nlp import bidistreamingtokenclassificationtaskrequest_pb2 as caikit_dot_runtime_dot_Nlp_dot_bidistreamingtokenclassificationtaskrequest__pb2
from caikit_nlp_client.generated.caikit.runtime.Nlp import serverstreamingtextgenerationtaskrequest_pb2 as caikit_dot_runtime_dot_Nlp_dot_serverstreamingtextgenerationtaskrequest__pb2
from caikit_nlp_client.generated.caikit.runtime.Nlp import textclassificationtaskrequest_pb2 as caikit_dot_runtime_dot_Nlp_dot_textclassificationtaskrequest__pb2
from caikit_nlp_client.generated.caikit.runtime.Nlp import textgenerationtaskrequest_pb2 as caikit_dot_runtime_dot_Nlp_dot_textgenerationtaskrequest__pb2
from caikit_nlp_client.generated.caikit.runtime.Nlp import tokenclassificationtaskrequest_pb2 as caikit_dot_runtime_dot_Nlp_dot_tokenclassificationtaskrequest__pb2
from caikit_nlp_client.generated.caikit_data_model.nlp import classificationresults_pb2 as caikit__data__model_dot_nlp_dot_classificationresults__pb2
from caikit_nlp_client.generated.caikit_data_model.nlp import generatedtextresult_pb2 as caikit__data__model_dot_nlp_dot_generatedtextresult__pb2
from caikit_nlp_client.generated.caikit_data_model.nlp import generatedtextstreamresult_pb2 as caikit__data__model_dot_nlp_dot_generatedtextstreamresult__pb2
from caikit_nlp_client.generated.caikit_data_model.nlp import tokenclassificationresults_pb2 as caikit__data__model_dot_nlp_dot_tokenclassificationresults__pb2
from caikit_nlp_client.generated.caikit_data_model.nlp import tokenclassificationstreamresult_pb2 as caikit__data__model_dot_nlp_dot_tokenclassificationstreamresult__pb2


class NlpServiceStub(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TokenClassificationTaskPredict = channel.unary_unary(
                '/caikit.runtime.Nlp.NlpService/TokenClassificationTaskPredict',
                request_serializer=caikit_dot_runtime_dot_Nlp_dot_tokenclassificationtaskrequest__pb2.TokenClassificationTaskRequest.SerializeToString,
                response_deserializer=caikit__data__model_dot_nlp_dot_tokenclassificationresults__pb2.TokenClassificationResults.FromString,
                )
        self.BidiStreamingTokenClassificationTaskPredict = channel.stream_stream(
                '/caikit.runtime.Nlp.NlpService/BidiStreamingTokenClassificationTaskPredict',
                request_serializer=caikit_dot_runtime_dot_Nlp_dot_bidistreamingtokenclassificationtaskrequest__pb2.BidiStreamingTokenClassificationTaskRequest.SerializeToString,
                response_deserializer=caikit__data__model_dot_nlp_dot_tokenclassificationstreamresult__pb2.TokenClassificationStreamResult.FromString,
                )
        self.TextGenerationTaskPredict = channel.unary_unary(
                '/caikit.runtime.Nlp.NlpService/TextGenerationTaskPredict',
                request_serializer=caikit_dot_runtime_dot_Nlp_dot_textgenerationtaskrequest__pb2.TextGenerationTaskRequest.SerializeToString,
                response_deserializer=caikit__data__model_dot_nlp_dot_generatedtextresult__pb2.GeneratedTextResult.FromString,
                )
        self.ServerStreamingTextGenerationTaskPredict = channel.unary_stream(
                '/caikit.runtime.Nlp.NlpService/ServerStreamingTextGenerationTaskPredict',
                request_serializer=caikit_dot_runtime_dot_Nlp_dot_serverstreamingtextgenerationtaskrequest__pb2.ServerStreamingTextGenerationTaskRequest.SerializeToString,
                response_deserializer=caikit__data__model_dot_nlp_dot_generatedtextstreamresult__pb2.GeneratedTextStreamResult.FromString,
                )
        self.TextClassificationTaskPredict = channel.unary_unary(
                '/caikit.runtime.Nlp.NlpService/TextClassificationTaskPredict',
                request_serializer=caikit_dot_runtime_dot_Nlp_dot_textclassificationtaskrequest__pb2.TextClassificationTaskRequest.SerializeToString,
                response_deserializer=caikit__data__model_dot_nlp_dot_classificationresults__pb2.ClassificationResults.FromString,
                )


class NlpServiceServicer(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    def TokenClassificationTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BidiStreamingTokenClassificationTaskPredict(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TextGenerationTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerStreamingTextGenerationTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TextClassificationTaskPredict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NlpServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TokenClassificationTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.TokenClassificationTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_Nlp_dot_tokenclassificationtaskrequest__pb2.TokenClassificationTaskRequest.FromString,
                    response_serializer=caikit__data__model_dot_nlp_dot_tokenclassificationresults__pb2.TokenClassificationResults.SerializeToString,
            ),
            'BidiStreamingTokenClassificationTaskPredict': grpc.stream_stream_rpc_method_handler(
                    servicer.BidiStreamingTokenClassificationTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_Nlp_dot_bidistreamingtokenclassificationtaskrequest__pb2.BidiStreamingTokenClassificationTaskRequest.FromString,
                    response_serializer=caikit__data__model_dot_nlp_dot_tokenclassificationstreamresult__pb2.TokenClassificationStreamResult.SerializeToString,
            ),
            'TextGenerationTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.TextGenerationTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_Nlp_dot_textgenerationtaskrequest__pb2.TextGenerationTaskRequest.FromString,
                    response_serializer=caikit__data__model_dot_nlp_dot_generatedtextresult__pb2.GeneratedTextResult.SerializeToString,
            ),
            'ServerStreamingTextGenerationTaskPredict': grpc.unary_stream_rpc_method_handler(
                    servicer.ServerStreamingTextGenerationTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_Nlp_dot_serverstreamingtextgenerationtaskrequest__pb2.ServerStreamingTextGenerationTaskRequest.FromString,
                    response_serializer=caikit__data__model_dot_nlp_dot_generatedtextstreamresult__pb2.GeneratedTextStreamResult.SerializeToString,
            ),
            'TextClassificationTaskPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.TextClassificationTaskPredict,
                    request_deserializer=caikit_dot_runtime_dot_Nlp_dot_textclassificationtaskrequest__pb2.TextClassificationTaskRequest.FromString,
                    response_serializer=caikit__data__model_dot_nlp_dot_classificationresults__pb2.ClassificationResults.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'caikit.runtime.Nlp.NlpService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NlpService(object):
    """-- SERVICES ----------------------------------------------------------------

    """

    @staticmethod
    def TokenClassificationTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.Nlp.NlpService/TokenClassificationTaskPredict',
            caikit_dot_runtime_dot_Nlp_dot_tokenclassificationtaskrequest__pb2.TokenClassificationTaskRequest.SerializeToString,
            caikit__data__model_dot_nlp_dot_tokenclassificationresults__pb2.TokenClassificationResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BidiStreamingTokenClassificationTaskPredict(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/caikit.runtime.Nlp.NlpService/BidiStreamingTokenClassificationTaskPredict',
            caikit_dot_runtime_dot_Nlp_dot_bidistreamingtokenclassificationtaskrequest__pb2.BidiStreamingTokenClassificationTaskRequest.SerializeToString,
            caikit__data__model_dot_nlp_dot_tokenclassificationstreamresult__pb2.TokenClassificationStreamResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TextGenerationTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.Nlp.NlpService/TextGenerationTaskPredict',
            caikit_dot_runtime_dot_Nlp_dot_textgenerationtaskrequest__pb2.TextGenerationTaskRequest.SerializeToString,
            caikit__data__model_dot_nlp_dot_generatedtextresult__pb2.GeneratedTextResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ServerStreamingTextGenerationTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/caikit.runtime.Nlp.NlpService/ServerStreamingTextGenerationTaskPredict',
            caikit_dot_runtime_dot_Nlp_dot_serverstreamingtextgenerationtaskrequest__pb2.ServerStreamingTextGenerationTaskRequest.SerializeToString,
            caikit__data__model_dot_nlp_dot_generatedtextstreamresult__pb2.GeneratedTextStreamResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TextClassificationTaskPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/caikit.runtime.Nlp.NlpService/TextClassificationTaskPredict',
            caikit_dot_runtime_dot_Nlp_dot_textclassificationtaskrequest__pb2.TextClassificationTaskRequest.SerializeToString,
            caikit__data__model_dot_nlp_dot_classificationresults__pb2.ClassificationResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
